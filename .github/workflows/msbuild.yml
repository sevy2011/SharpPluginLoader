name: MSBuild

on: workflow_dispatch

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    env:
      BUILD_CONFIGURATION: ${{matrix.configuration}}
      
      # Path to the solution file relative to the root of the project.
      SOLUTION_FILE_PATH: ./mhw-cs-plugin-loader.sln

      # Allow vcpkg to install packages from the GitHub Actions cache.
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
      
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        with:
          vs-version: "[,17)"
          msbuild-architecture: x64

      - name: Integrate vcpkg
        run: |
          vcpkg integrate install

      - name: Generate cimgui project files
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          cd ./dependencies/cimgui/
          cmake -B . -G 'Visual Studio 17 2022'

      - name: Dotnet Restore
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          dotnet restore ${{env.SOLUTION_FILE_PATH}}
      
      - name: Build Solution
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          msbuild -m -p:Configuration=${{env.BUILD_CONFIGURATION}} -p:Platform=x64 ${{env.SOLUTION_FILE_PATH}}

      - name: Archive Artifacts
        uses : actions/upload-artifact@v4
        with:
          name: mhw-cs-plugin-loader-${{env.BUILD_CONFIGURATION}}
          path: d:\a\SharpPluginLoader\SharpPluginLoader\x64\${{env.BUILD_CONFIGURATION}}\*
          overwrite: true
          if-no-files-found: error

      # TODO(Andoryuuta): Can't currently build solution directly due to build order issues + "Release" mode binaries expected on-disk for some build scripts.
      # - name: Build Solution
      #   working-directory: ${{env.GITHUB_WORKSPACE}}
      #   # Add additional options to the MSBuild command line here (like platform or verbosity level).
      #   # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      #   run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=x64 /p:VcpkgEnableManifest=true ${{env.SOLUTION_FILE_PATH}}
